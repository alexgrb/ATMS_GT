//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsForms.ServiceReferencePrinter {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAccount", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class UserAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmountAvailable {
            get {
                return this.AmountAvailableField;
            }
            set {
                if ((this.AmountAvailableField.Equals(value) != true)) {
                    this.AmountAvailableField = value;
                    this.RaisePropertyChanged("AmountAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardID {
            get {
                return this.CardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CardIDField, value) != true)) {
                    this.CardIDField = value;
                    this.RaisePropertyChanged("CardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePrinter.IGetUsersService")]
    public interface IGetUsersService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUsersService/GetUsers", ReplyAction="http://tempuri.org/IGetUsersService/GetUsersResponse")]
        WindowsForms.ServiceReferencePrinter.UserAccount[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUsersService/GetUsers", ReplyAction="http://tempuri.org/IGetUsersService/GetUsersResponse")]
        System.Threading.Tasks.Task<WindowsForms.ServiceReferencePrinter.UserAccount[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUsersService/GetAvailableAmount", ReplyAction="http://tempuri.org/IGetUsersService/GetAvailableAmountResponse")]
        int GetAvailableAmount(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUsersService/GetAvailableAmount", ReplyAction="http://tempuri.org/IGetUsersService/GetAvailableAmountResponse")]
        System.Threading.Tasks.Task<int> GetAvailableAmountAsync(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUsersService/ReloadMoneyUID", ReplyAction="http://tempuri.org/IGetUsersService/ReloadMoneyUIDResponse")]
        void ReloadMoneyUID(int uid, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUsersService/ReloadMoneyUID", ReplyAction="http://tempuri.org/IGetUsersService/ReloadMoneyUIDResponse")]
        System.Threading.Tasks.Task ReloadMoneyUIDAsync(int uid, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUsersService/getUsernameByCardID", ReplyAction="http://tempuri.org/IGetUsersService/getUsernameByCardIDResponse")]
        string getUsernameByCardID(string cardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUsersService/getUsernameByCardID", ReplyAction="http://tempuri.org/IGetUsersService/getUsernameByCardIDResponse")]
        System.Threading.Tasks.Task<string> getUsernameByCardIDAsync(string cardID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetUsersServiceChannel : WindowsForms.ServiceReferencePrinter.IGetUsersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersServiceClient : System.ServiceModel.ClientBase<WindowsForms.ServiceReferencePrinter.IGetUsersService>, WindowsForms.ServiceReferencePrinter.IGetUsersService {
        
        public GetUsersServiceClient() {
        }
        
        public GetUsersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetUsersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetUsersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetUsersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WindowsForms.ServiceReferencePrinter.UserAccount[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<WindowsForms.ServiceReferencePrinter.UserAccount[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public int GetAvailableAmount(int uid) {
            return base.Channel.GetAvailableAmount(uid);
        }
        
        public System.Threading.Tasks.Task<int> GetAvailableAmountAsync(int uid) {
            return base.Channel.GetAvailableAmountAsync(uid);
        }
        
        public void ReloadMoneyUID(int uid, int amount) {
            base.Channel.ReloadMoneyUID(uid, amount);
        }
        
        public System.Threading.Tasks.Task ReloadMoneyUIDAsync(int uid, int amount) {
            return base.Channel.ReloadMoneyUIDAsync(uid, amount);
        }
        
        public string getUsernameByCardID(string cardID) {
            return base.Channel.getUsernameByCardID(cardID);
        }
        
        public System.Threading.Tasks.Task<string> getUsernameByCardIDAsync(string cardID) {
            return base.Channel.getUsernameByCardIDAsync(cardID);
        }
    }
}
